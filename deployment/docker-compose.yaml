version: "3.1"

services:
  product_keeper:
    container_name: product-keeper
    build:
      context: ..
      dockerfile: ./deployment/Dockerfile
    command: ./product-keeper
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka-1

  db:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "pass"
    ports:
      - "5432:5432"

  test-db:
    container_name: postgres-test
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "pass"
    ports:
      - "5433:5432"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "2181:2181"

  kafka-1:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9095:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://localhost:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_offsets_topic_replication_factor: 3
      KAFKA_BROKER_ID: 500

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9090:8080
    depends_on:
      - kafka-1
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
