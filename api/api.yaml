openapi: 3.0.0
info:
  title: product-keeper
  version: 0.0.1
servers:
  - url: 'http://localhost:8080/'
    description: Dev server
paths:
  /user/register:
    post:
      summary: Registering a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: User has been successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /user/login:
    post:
      summary: User authorization
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: User successfully authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: User is not registered yet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /product/add:
    post:
      summary: Creating a new product
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Product has been successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_id:
                    type: integer
                    description: ID of the created product
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /products:
    get:
      summary: Getting products
      tags:
        - Product
      security:
        - bearerAuth: []
      parameters:
        - name: name
          in: query
          description: Search by name
          required: false
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort by last_create or name
          required: false
          schema:
            type: string
            enum:
              - last_create
              - name
      responses:
        '200':
          description: Products has been successfully received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/products'
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/product/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Product id
        schema:
          type: string
    get:
      summary: Getting product by id
      tags:
        - Product
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Product data has been successfully received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: User does not have access to this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Product with such id does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      summary: Update product by id
      tags:
        - Product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: New product information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '200':
          description: Product data has been successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: User does not have access to this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Product with such id does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: Delete product by id
      tags:
        - Product
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Product has been successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: User does not have access to this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Product with such id does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example: gopher
        password:
          type: string
          example: superpass123
      required:
        - username
        - password
    ok:
      type: object
      properties:
        message:
          type: string
          example: success
      required:
        - message
    error:
      type: object
      properties:
        message:
          type: string
          example: failure
      required:
        - message
    token:
      type: object
      properties:
        token:
          type: string
          description: JWT token
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      required:
        - token
    products:
      type: array
      items:
        $ref: '#/components/schemas/product'
    product:
      type: object
      properties:
        name:
          type: string
          example: gopher
        price:
          type: integer
          example: 42
        quantity:
          type: integer
          example: 42
      required:
        - name
        - price
        - quantity
